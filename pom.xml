<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.1.RELEASE</version>
    </parent>
    <groupId>com.java</groupId>
    <artifactId>log-admin</artifactId>
    <version>0.0.1</version>
    <packaging>jar</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <shiro.version>1.4.0</shiro.version>
    </properties>


    <dependencies>
        
        <!-- Junit -->
        <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- lombok -->
        <dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>compile</scope>
		</dependency>
        
        <!-- spring mvc -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- spring aop -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        
        <!-- shiro 1.4.0 相关包 -->
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-core</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-spring</artifactId>
            <version>${shiro.version}</version>
        </dependency>
        <!-- <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency> -->
        <dependency>
            <groupId>org.crazycake</groupId>
            <artifactId>shiro-redis</artifactId>
            <version>2.4.2.1-RELEASE</version>
        </dependency>
        <!-- End  -->
        
        
        <!-- mybatis -->
        <dependency>
            <groupId>tk.mybatis</groupId>
            <artifactId>mapper-spring-boot-starter</artifactId>
            <version>2.0.2</version>
        </dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>1.2.5</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- End -->
        
        <!--swagger -->
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.9.2</version>
		</dependency>
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.9.2</version>
		</dependency>
		<!-- End -->
		
		<!-- 基础公共工具包 -->
		<dependency>
			<groupId>com.java</groupId>
			<artifactId>common-util</artifactId>
			<version>1.0.6</version>
		</dependency>
		
		<!-- beetl -->		
		<dependency>
			<groupId>com.ibeetl</groupId>
			<artifactId>beetl-framework-starter</artifactId>
			<version>1.1.63.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

    </dependencies>

    <build>
		<plugins>
			<!-- 编译插件 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<!-- docker maven plugin -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.4.13</version>
				
				<!-- 将插件绑定在package上执行，不想绑定 -->
				<!-- <executions>
					<execution>
						<id>build-image</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions> -->
				
				<configuration>
					<!-- 制定镜像名称 -->
					<imageName>registry.cn-shanghai.aliyuncs.com/yucong/log-admin</imageName>
					<!-- 指定镜像名称和标签 -->
					<imageTags>
						<imageTag>1.0.0</imageTag>
						<!-- <imageTag>latest</imageTag> -->
					</imageTags>
					
					<!-- 重复构建相同标签名称的镜像会覆盖 -->
					<forceTags>true</forceTags>
					
					<!-- 指定Dockerfile所在的路径 -->
					<dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<!-- 用于指定需要复制的根目录，${project.build.directory} 表示target目录 -->
							<directory>${project.build.directory}</directory>
							<!-- 用于指定需要复制的文件，${project.build.finalName}.jar 指的是打包后的jar包文件 -->
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
					
					<!-- 在maven配置文件settings.xml中配置的server.id一致，用于推送镜像 -->
					<serverId>docker-aliyun-my</serverId>
				</configuration>
			</plugin>
			
			<!-- <plugin>
			    <artifactId>maven-resources-plugin</artifactId>
			    <configuration>
			        <resources>
			            <resource>
							<directory>src/main/java</directory>
							<includes>
								<include>**/*.xml</include>
							</includes>
							<filtering>true</filtering>
						</resource>
						<resource>
							<directory>src/main/resources</directory>
							<includes>
								<include>**/*.xml</include>
							</includes>
							<filtering>true</filtering>
						</resource>
						<resource>
							<directory>src/main/resources</directory>
							<includes>
								<include>**/*.yml</include>
							</includes>
							<filtering>true</filtering>
						</resource>
						<resource>
							<directory>src/main/webapp</directory>
							<includes>
								<include>**/*.*</include>
							</includes>
							<filtering>true</filtering>
						</resource>
			        </resources>
			        <encoding>utf-8</encoding>
			        <useDefaultDelimiters>true</useDefaultDelimiters>
			    </configuration>
			</plugin> -->
			
		</plugins>
		
		
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.xml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<includes>
					<include>**/*.yml</include>
				</includes>
				<filtering>true</filtering>
			</resource>
			
			<resource>
				<directory>src/main/webapp</directory>
				<filtering>true</filtering>
				<excludes>
					<exclude>**/*.*</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/webapp</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.*</include>
				</includes>
			</resource>
		</resources>
		
	</build>

</project>
